name: Tests

on:
  workflow_dispatch:
  push:
    branches: [master, 'release*']
    tags: ['*']
  pull_request:
    paths-ignore:
    - 'docs/**'
    - '**/*.rst'
    - '**/*.md'
    - .gitignore
    - CREDITS
    - LICENSE

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  main:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: Test suite with py310-ubuntu, mypyc-compiled
          python: '3.10'
          arch: x64
          os: ubuntu-latest
          toxenv: py
          tox_extra_args: "-n 2"
          test_mypyc: true
        - name: Test suite with py310-ubuntu
          python: '3.10'
          arch: x64
          os: ubuntu-latest
          toxenv: py
          tox_extra_args: "-n 2"
        - name: Test suite with py311-ubuntu, mypyc-compiled
          python: '3.11'
          arch: x64
          os: ubuntu-latest
          toxenv: py
          tox_extra_args: "-n 2"
          test_mypyc: true
        - name: Formatting with Black + isort and code style with flake8
          python: '3.10'
          arch: x64
          os: ubuntu-latest
          toxenv: lint

    name: ${{ matrix.name }}
    env:
      TOX_SKIP_MISSING_INTERPRETERS: False
      # Rich (pip)
      FORCE_COLOR: 1
      # Tox
      PY_COLORS: 1
      # Mypy (see https://github.com/python/mypy/issues/7771)
      TERM: xterm-color
      MYPY_FORCE_COLOR: 1
      MYPY_FORCE_TERMINAL_WIDTH: 200
      # Pytest
      PYTEST_ADDOPTS: --color=yes
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.arch }}
    - name: Debug build
      if: ${{ matrix.debug_build }}
      run: |
        PYTHONVERSION=${{ matrix.python }}
        PYTHONDIR=~/python-debug/python-$PYTHONVERSION
        VENV=$PYTHONDIR/env
        ./misc/build-debug-python.sh $PYTHONVERSION $PYTHONDIR $VENV
        source $VENV/bin/activate
    - name: Install tox
      run: pip install --upgrade 'setuptools!=50' tox==4.4.4
    - name: Compiled with mypyc
      if: ${{ matrix.test_mypyc }}
      run: |
        pip install -r test-requirements.txt
        CC=clang MYPYC_OPT_LEVEL=0 MYPY_USE_MYPYC=1 pip install -e .
    - name: Setup tox environment
      run: tox run -e ${{ matrix.toxenv }} --notest
    - name: Test
      run: tox run -e ${{ matrix.toxenv }} --skip-pkg-install -- ${{ matrix.tox_extra_args }}
